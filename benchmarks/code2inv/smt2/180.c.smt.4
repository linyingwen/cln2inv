)

( define-fun pre-f ( ( i Int )( sn Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( sn_0 Int )( sn_1 Int )( sn_2 Int )( sn_3 Int )( sn_4 Int ) ) Bool
	( and
		( = i i_1 )
		( = sn sn_1 )
		( = i_1 1 )
		( = sn_1 0 )
	)
)

( define-fun trans-f ( ( i Int )( sn Int )( i! Int )( sn! Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( sn_0 Int )( sn_1 Int )( sn_2 Int )( sn_3 Int )( sn_4 Int ) ) Bool
	( or
		( and
			( = i_2 i )
			( = sn_2 sn )
			( = i_2 i! )
			( = sn_2 sn! )
			( = sn sn! )
		)
		( and
			( = i_2 i )
			( = sn_2 sn )
			( <= i_2 8 )
			( < i_2 4 )
			( = sn_3 ( + sn_2 2 ) )
			( = sn_4 sn_3 )
			( = i_3 ( + i_2 1 ) )
			( = i_3 i! )
			( = sn_4 sn! )
		)
		( and
			( = i_2 i )
			( = sn_2 sn )
			( <= i_2 8 )
			( not ( < i_2 4 ) )
			( = sn_4 sn_2 )
			( = i_3 ( + i_2 1 ) )
			( = i_3 i! )
			( = sn_4 sn! )
		)
	)
)

( define-fun post-f ( ( i Int )( sn Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( sn_0 Int )( sn_1 Int )( sn_2 Int )( sn_3 Int )( sn_4 Int ) ) Bool
	( and
		( or
			( not
				( and
					( = i i_2)
					( = sn sn_2)
				)
			)
			( not
				( and
					( not ( <= i_2 8 ) )
					( = sn_2 ( * 8 2 ) )
					( not ( or ( = sn_2 ( * 8 2 ) ) ( = sn_2 0 ) ) )
				)
			)
		)
		( or
			( not
				( and
					( = i i_2)
					( = sn sn_2)
				)
			)
			( not
				( and
					( not ( <= i_2 8 ) )
					( not ( = sn_2 ( * 8 2 ) ) )
					( not ( or ( = sn_2 ( * 8 2 ) ) ( = sn_2 0 ) ) )
				)
			)
		)
	)
)
( assert ( not
	( =>
		( inv-f i sn  )
		( post-f i sn i_0 i_1 i_2 i_3 sn_0 sn_1 sn_2 sn_3 sn_4 )
	)
))

