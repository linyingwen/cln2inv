)

( define-fun pre-f ( ( i Int )( j Int )( l Int )( i_0 Int )( i_1 Int )( i_2 Int )( j_0 Int )( j_1 Int )( j_2 Int )( l_0 Int )( l_1 Int )( l_2 Int ) ) Bool
	( and
		( = i i_0 )
		( = j j_0 )
		( = l l_0 )
		( = i_0 0 )
		( = j_0 0 )
		( = l_0 0 )
	)
)

( define-fun trans-f ( ( i Int )( j Int )( l Int )( i! Int )( j! Int )( l! Int )( i_0 Int )( i_1 Int )( i_2 Int )( j_0 Int )( j_1 Int )( j_2 Int )( l_0 Int )( l_1 Int )( l_2 Int ) ) Bool
	( or
		( and
			( = i_1 i )
			( = j_1 j )
			( = l_1 l )
			( = i_1 i! )
			( = j_1 j! )
			( = l_1 l! )
			( = i i! )
			( = j j! )
		)
		( and
			( = i_1 i )
			( = j_1 j )
			( = l_1 l )
			( < l_1 268435455 )
			( = i_2 ( + i_1 1 ) )
			( = j_2 ( + j_1 2 ) )
			( = l_2 ( + l_1 3 ) )
			( = i_2 i! )
			( = j_2 j! )
			( = l_2 l! )
		)
	)
)

( define-fun post-f ( ( i Int )( j Int )( l Int )( i_0 Int )( i_1 Int )( i_2 Int )( j_0 Int )( j_1 Int )( j_2 Int )( l_0 Int )( l_1 Int )( l_2 Int ) ) Bool
	( or
		( not
			( and
				( = i i_1)
				( = j j_1)
				( = l l_1)
			)
		)
		( not
			( and
				( not ( < l_1 268435455 ) )
				( not ( = l_1 ( * 3 i_1 ) ) )
				( not ( = j_1 ( * 2 i_1 ) ) )
			)
		)
	)
)
( assert ( not
	( =>
		( pre-f i j l i_0 i_1 i_2 j_0 j_1 j_2 l_0 l_1 l_2  )
		( inv-f i j l )
	)
))

